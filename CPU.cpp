#include "CPU.h"
#include <string>
#include <iostream>

CPU::CPU() : mux2_0(0), mux2_1(1), mux2_2(2), mux2_3(3), mux2_4(4), mux2_5(5), mux2_6(6), mux2_7(7), mux2_8(8), mux2_9(9), mux3_0(0), mux3_1(1), mux3_2(2) {
   }

void CPU:: setParser(MIPSParser parser){
    mux2_0.setMux2_1(&mux2_1);
    mux2_1.setProgramCounter(&programCounter);
    programCounter.setInstructionMemory(&instructionMemory);
    programCounter.setBuffer1(&buffer1);
    programCounter.setBranchMux(&mux2_0);
    instructionMemory.setBuffer1(&buffer1);
    instructionMemory.setBranchPrediction(&branchPrediction);
    instructionMemory.setTimingDiagram(&timingDiagram);
    branchPrediction.setConfirmedNextAddress(&confirmedNextAddress);
    branchPrediction.setMux2_0(&mux2_0);
    branchPrediction.setBuffer1(&buffer1);
    branchPrediction.setBuffer2(&buffer2);
    branchPrediction.setJump(&jump);
    branchPrediction.setTimingDiagram(&timingDiagram);
    confirmedNextAddress.setProgramCounter(&programCounter);
    buffer1.setBuffer2(&buffer2);
    buffer1.setControlUnit(&controlUnit);
    buffer1.setRegFile(&regFile);
    buffer1.setTAOrDAMux(&mux2_2);
    buffer1.setJump(&jump);
    buffer1.setHazardDetection(&hazardDetection);
    controlUnit.setBuffer2(&buffer2);
    controlUnit.setTAOrDAMux(&mux2_2);
    regFile.setBuffer2(&buffer2);
    jump.setBuffer1(&buffer1);
    jump.setBuffer2(&buffer2);
    jump.setMux2_1(&mux2_1);
    jump.setMux2_6(&mux2_6);
    regFile.setJump(&jump);
    mux2_2.setMux2_6(&mux2_6);
    mux2_6.setBuffer2(&buffer2);
    hazardDetection.setBuffer2(&buffer2);
    hazardDetection.setProgramCounter(&programCounter);
    hazardDetection.setJump(&jump);
    buffer2.setBuffer3(&buffer3);
    buffer2.setForwardingUnit(&forwardingUnit);
    buffer2.setSource1Mux(&mux3_0);
    buffer2.setTDOrImmMux(&mux2_3);
    buffer2.setALU(&alu);
    buffer2.setMux3_2(&mux3_2);
    buffer2.setMux2_7(&mux2_7);
    buffer2.setHazardDetection(&hazardDetection);
    buffer2.setBranchPrediction(&branchPrediction);
    mux2_3.setMux3_1(&mux3_1);
    mux3_0.setMux2_8(&mux2_8);
    mux3_1.setMux2_9(&mux2_9);
    mux2_8.setALU(&alu);
    mux2_9.setALU(&alu);
    mux3_2.setBuffer3(&buffer3);
    alu.setMux2_7(&mux2_7);
    alu.setBranchPrediction(&branchPrediction);
    mux2_7.setBuffer3(&buffer3);
    forwardingUnit.setBuffer3(&buffer3);
    forwardingUnit.setMux3_0(&mux3_0);
    forwardingUnit.setMux3_1(&mux3_1);
    forwardingUnit.setMux3_2(&mux3_2);
    forwardingUnit.setMux2_8(&mux2_8);
    forwardingUnit.setMux2_9(&mux2_9);
    buffer3.setBuffer4(&buffer4);
    buffer3.setDataMemory(&dataMemory);
    buffer3.setDataMemoryMux(&mux2_4);
    buffer3.setForwardingUnit(&forwardingUnit);
    buffer3.setSource1Mux(&mux3_0);
    buffer3.setSource2Mux(&mux3_1);
    buffer3.setMux3_2(&mux3_2);
    buffer3.setHazardDetection(&hazardDetection);
    mux2_4.setDataMemory(&dataMemory);
    dataMemory.setBuffer4(&buffer4);
    buffer4.setDataMemoryMux(&mux2_4);
    buffer4.setFinalMux(&mux2_5);
    buffer4.setForwardingUnit(&forwardingUnit);
    buffer4.setRegFile(&regFile);
    buffer4.setSource1Mux(&mux3_0);
    buffer4.setSource2Mux(&mux3_1);
    buffer4.setMux3_2(&mux3_2);
    buffer4.setMux2_8(&mux2_8);
    buffer4.setMux2_9(&mux2_9);
    mux2_5.setRegFile(&regFile);
    instructionMemory.setInstructions(parser.getInstructions());
}

void CPU::execute() {
	buffer4.execute();
	mux2_5.execute();
	regFile.write();
	buffer3.execute();
	mux2_4.execute();
	dataMemory.execute();
	buffer2.execute();
	forwardingUnit.execute();
	mux2_3.execute();
	mux3_0.execute();
	mux3_1.execute();
	mux2_8.execute();
	mux2_9.execute();
	alu.execute();
	mux2_7.execute();
	mux3_2.execute();
	buffer1.execute();
	hazardDetection.execute();
	controlUnit.execute();
	mux2_2.execute();
	regFile.read();
	jump.execute();
	mux2_6.execute();
	programCounter.execute();
	mux2_0.execute();
	mux2_1.execute();
	branchPrediction.execute();
	confirmedNextAddress.execute();
	instructionMemory.execute();
}

